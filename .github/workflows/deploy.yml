name: Deploy project

on:
  push:
    branches:
      - "**"

env:
  IMAGE_NAME: automatic

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Linting Terraform
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Run TFLint
        run: tflint
        working-directory: terraform

  build_automatic:
    runs-on: self-hosted
    permissions:
      contents: write
      packages: write
    steps:
      - name: Set lower case owner name
        run: echo "OWNER_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for Dockerfile changes
        id: dockerfile_changed
        run: |
          git diff --quiet HEAD^ HEAD -- Dockerfiles/ || echo "Dockerfile changed" > change.txt
        continue-on-error: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          makeLatest: true

      - name: Build Docker image
        id: docker_build
        if: success()
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: Dockerfiles/automatic1111/Dockerfile
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/${{ env.IMAGE_NAME }}:${{ steps.tag_version.outputs.new_tag }}
            ghcr.io/${{ env.OWNER_LC }}/${{ env.IMAGE_NAME }}:latest

  configure_and_deploy:
    runs-on: self-hosted
    needs: 
      - lint
      - build_automatic
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Ansible if not already installed
        run: |
          if ! command -v ansible &> /dev/null; then
            sudo apt-get update -y
            sudo apt-get install -y ansible
          else
            echo "Ansible is already installed"

      - name: Run Ansible Playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ansible/playbook.yml
          inventory: |
            [Production]
            localhost ansible_connection=local
          options: >
            --extra-vars "git_token=${{ secrets.TERRAFORM_TOKEN }} vpn_password=${{ secrets.VPN_PASSWORD }} vpn_psk=${{ secrets.VPN_PSK }} pihole_web_password=${{ secrets.PIHOLE_WEB_PASSWORD }}"
