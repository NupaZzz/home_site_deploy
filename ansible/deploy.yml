# ---
# - name: Deploy Dockerized Application
#   hosts: Production
#   become: true
#   vars_files:
#     - vars/main.yml

#   tasks:
#     - name: Ensure Docker is installed
#       apt:
#         name: docker.io
#         state: present
#         update_cache: true

#     - name: Login to GitHub Container Registry
#       community.docker.docker_login:
#         registry: ghcr.io
#         username: "{{ lookup('env', 'GITHUB_ACTOR') }}"
#         password: "{{ lookup('env', 'GITHUB_TOKEN') }}"
#         state: present

#     - name: Pull the latest Docker image
#       community.docker.docker_image:
#         name: "{{ docker_image }}"
#         source: pull

#     - name: Stop the running container
#       community.docker.docker_container:
#         name: "{{ container_name }}"
#         state: stopped
#         container_default_behavior: "no_defaults"
#       ignore_errors: true

#     - name: Remove the stopped container
#       community.docker.docker_container:
#         name: "{{ container_name }}"
#         state: absent
#         container_default_behavior: "no_defaults"
#       ignore_errors: true

#     - name: Start a new container
#       community.docker.docker_container:
#         name: "{{ container_name }}"
#         image: "ghcr.io/{{ lookup('env', 'OWNER_LC') }}/{{ lookup('env', 'IMAGE_NAME') }}:latest"
#         state: started
#         ports:
#           - "{{ host_port }}:{{ container_port }}"
#         volumes:
#           - "{{ host_volume_path }}:{{ container_volume_path }}"
#         container_default_behavior: "no_defaults"
#         healthcheck:
#           test: ["CMD-SHELL", "curl -f http://localhost:{{ container_port }}"]
#           interval: 30s
#           timeout: 10s
#           retries: 3
#           start_period: 30s

# - name: Deploy Docker into Vagrant
# - hosts: default
#   become: true
#   vars_files:
#     - vars/main.yml

#   tasks:
#     - name: Install Docker
#       ansible.builtin.apt:
#         name:
#           - docker.io
#           - docker-buildx
#         state: present
#         update_cache: yes

#     - name: Install buildx
#       ansible.builtin.shell: docker buildx install

#     - name: Ensure Docker service is running
#       ansible.builtin.systemd:
#         name: docker
#         state: started
#         enabled: yes

#     - name: Create project directory (if needed)
#       ansible.builtin.file:
#         path: "{{ project_target_path }}"
#         state: directory
#         owner: vagrant
#         group: vagrant

#     - name: Copy project
#       ansible.builtin.copy:
#         src: ../project/
#         dest: "{{ project_target_path }}/project"
#         owner: vagrant
#         group: vagrant
#         mode: '0755'

#     - name: Copy Dockerfile to target
#       ansible.builtin.copy:
#         src: ../Dockerfile
#         dest: "{{ project_target_path }}/Dockerfile"
#         owner: vagrant
#         group: vagrant
#         mode: '0644'

#     - name: Copy start.sh to target
#       ansible.builtin.copy:
#         src: ../start.sh
#         dest: "{{ project_target_path }}/start.sh"
#         owner: vagrant
#         group: vagrant
#         mode: '0755'

#     - name: Run build and start Docker container
#       become: True
#       ansible.builtin.shell: |
#         export DOCKER_BUILDKIT=1
#         ./start.sh
#       args:
#         chdir: "{{ project_target_path }}"